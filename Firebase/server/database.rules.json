{
  "rules": {
    "channels": {
      "$channel_id": {
        ".read": "!root.child('owners').child($channel_id).exists() || root.child('owners').child($channel_id).child(auth.uid).exists()",
        ".write": "(!root.child('owners').child($channel_id).exists() || root.child('owners').child($channel_id).child(auth.uid).exists()) && !data.exists()",
        ".validate": "newData.hasChildren(['name', 'access']) && $channel_id.matches(/^([\\u2b00-\\u2bfe]|\\ud83c[\\udf00-\\udfff]|\\ud83d[\\udc00-\\uddfe\\ude00-\\ude4e\\ude80-\\udefe])$/)"
      }
    },
    "messages": {
      "$channel_id": {
        ".read": "!root.child('owners').child($channel_id).exists() || root.child('owners').child($channel_id).child(auth.uid).exists()",
        "$message_id": {
            ".write": "root.child('channels').child($channel_id).exists() && (!root.child('owners').child($channel_id).exists() || root.child('owners').child($channel_id).child(auth.uid).exists()) && !data.exists() && newData.exists()",
            ".validate": "newData.hasChildren(['author', 'body', 'timestamp'])",
            "author": {
              ".validate": "newData.hasChildren(['id', 'name'])",
              "id": {
                ".validate": "newData.val() === auth.uid"
              }
            }
          }
      }
    },
    "public-channels-index": {
      ".read": "auth != null",
      ".write": "auth != null"
    },
    "private-channels-index": {
        ".read": "auth != null",
        ".write": "auth != null"
    },
    "owners": {
      "$channel_id": {
        ".read": "!root.child('owners').child($channel_id).exists() || root.child('owners').child($channel_id).child(auth.uid).exists()",
        ".write": "!(root.child('channels').child($channel_id).exists() || root.child('owners').child($channel_id).exists()) || root.child('owners').child($channel_id).child(auth.uid).exists()",
        ".validate": "$channel_id.matches(/^([\\u2b00-\\u2bfe]|\\ud83c[\\udf00-\\udfff]|\\ud83d[\\udc00-\\uddfe\\ude00-\\ude4e\\ude80-\\udefe])$/)"
      }
    },
    "users": {
      ".read": "auth != null",
      "$user_id": {
        ".write": "auth.uid === $user_id",
        ".validate": "newData.hasChildren(['id', 'name'])",
        "id": {
          ".validate": "newData.val() === auth.uid"
        }
      }
    }
  }
}
